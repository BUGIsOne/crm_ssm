<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ll.dao.Stock_outMapper">
  <resultMap id="BaseResultMap" type="com.ll.pojo.Stock_out">
    <id column="Id" jdbcType="INTEGER" property="id" />
    <result column="Pnum" jdbcType="VARCHAR" property="pnum" />
    <result column="Cid" jdbcType="INTEGER" property="cid" />
    <result column="number_out" jdbcType="INTEGER" property="numberOut" />
    <result column="createDate" jdbcType="TIMESTAMP" property="createdate" />
    <result column="Uid" jdbcType="INTEGER" property="uid" />
  </resultMap>
  <sql id="Base_Column_List">
    Id, Pnum, Cid, number_out, createDate, Uid
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from stock_out
    where Id = #{id,jdbcType=INTEGER}
  </select>
  
  <select id="selectByPnum" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from stock_out
    where Pnum = #{pnum,jdbcType=VARCHAR}
  </select>
  
	<select id="selectAllStock_out"  resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from stock_out
  	</select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from stock_out
    where Id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.ll.pojo.Stock_out">
    insert into stock_out (Id, Pnum, Cid, 
      number_out, createDate, Uid
      )
    values (#{id,jdbcType=INTEGER}, #{pnum,jdbcType=VARCHAR}, #{cid,jdbcType=INTEGER}, 
      #{numberOut,jdbcType=INTEGER}, #{createdate,jdbcType=TIMESTAMP}, #{uid,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.ll.pojo.Stock_out" keyProperty="id" useGeneratedKeys="true">
    insert into stock_out
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        Id,
      </if>
      <if test="pnum != null">
        Pnum,
      </if>
      <if test="cid != null">
        Cid,
      </if>
      <if test="numberOut != null">
        number_out,
      </if>
      <if test="createdate != null">
        createDate,
      </if>
      <if test="uid != null">
        Uid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="pnum != null">
        #{pnum,jdbcType=VARCHAR},
      </if>
      <if test="cid != null">
        #{cid,jdbcType=INTEGER},
      </if>
      <if test="numberOut != null">
        #{numberOut,jdbcType=INTEGER},
      </if>
      <if test="createdate != null">
        #{createdate,jdbcType=TIMESTAMP},
      </if>
      <if test="uid != null">
        #{uid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.ll.pojo.Stock_out">
    update stock_out
    <set>
      <if test="pnum != null">
        Pnum = #{pnum,jdbcType=VARCHAR},
      </if>
      <if test="cid != null">
        Cid = #{cid,jdbcType=INTEGER},
      </if>
      <if test="numberOut != null">
        number_out = #{numberOut,jdbcType=INTEGER},
      </if>
      <if test="createdate != null">
        createDate = #{createdate,jdbcType=TIMESTAMP},
      </if>
      <if test="uid != null">
        Uid = #{uid,jdbcType=INTEGER},
      </if>
    </set>
    where Id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ll.pojo.Stock_out">
    update stock_out
    set Pnum = #{pnum,jdbcType=VARCHAR},
      Cid = #{cid,jdbcType=INTEGER},
      number_out = #{numberOut,jdbcType=INTEGER},
      createDate = #{createdate,jdbcType=TIMESTAMP},
      Uid = #{uid,jdbcType=INTEGER}
    where Id = #{id,jdbcType=INTEGER}
  </update>
</mapper>